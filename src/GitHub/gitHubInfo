Create gitignore
1) right click on project -> new -> file -> .gitignore
  type the normal file
2) you select the file/s you want to add to git ignore  -> right click on the files -> git
-> add to .gitignore
Commit the changes locally
Sharing the project
 -> creates a remote repository
 -> link our project with the remote repository
 -> pus the changes so far

or manually:
-> gone to github.com -> repositories
-> create a new repository
-> took the link from github, then go to intelliJ, go to git -> manage remotes
and add click the plus icon. put the url
-> push the first changes

created a new branch
-> right click on master branch -> new branch from master
-> we called the branch our names-> checkout to new branch

made changes on name branch and then commit
made more changes on name branch and then commit

oush the local name branch to the origin name branch
 (the first time we push a new branch, intelliJ offers to create the origin branch

 CREATE A PULL REQUEST

 A step between merging braches to allow review of the changes
 1)go to remote repository
   find the pull request menu
     create a new pull request
      master(base) <- name branch (compare)
       compare / merge the changes in the name branch to the master branch
       assign a reviewer and they will comment, discuss, and then approve changes

       after pull request is approved the branches are merged. in this case the origin master has all the
       changes so far

   update my local master

     so far the changes were merged to the origin master and so I needed to checkout to my local master
     in IntelliJ and update

     or you can pull

     update: gets the changes from the same branch origin local

     pull: allows you to get the changes from any branch